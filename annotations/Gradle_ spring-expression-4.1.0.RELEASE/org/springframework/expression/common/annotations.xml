<root>
    <item name='org.springframework.expression.common.ExpressionUtils byte toByte(org.springframework.expression.TypeConverter, org.springframework.expression.TypedValue) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.expression.common.LiteralExpression java.lang.Class&lt;?&gt; getValueType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.expression.common.ExpressionUtils int toInt(org.springframework.expression.TypeConverter, org.springframework.expression.TypedValue) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.expression.common.ExpressionUtils double toDouble(org.springframework.expression.TypeConverter, org.springframework.expression.TypedValue) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.expression.common.ExpressionUtils boolean toBoolean(org.springframework.expression.TypeConverter, org.springframework.expression.TypedValue) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.expression.common.CompositeStringExpression java.lang.Class&lt;?&gt; getValueType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.expression.common.CompositeStringExpression java.lang.Class&lt;?&gt; getValueType(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.expression.common.ExpressionUtils char toChar(org.springframework.expression.TypeConverter, org.springframework.expression.TypedValue) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.expression.common.CompositeStringExpression void setValue(org.springframework.expression.EvaluationContext, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.expression.common.CompositeStringExpression java.lang.Class&lt;?&gt; getValueType(org.springframework.expression.EvaluationContext, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.expression.common.LiteralExpression boolean isWritable(org.springframework.expression.EvaluationContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.expression.common.LiteralExpression java.lang.Class&lt;?&gt; getValueType(org.springframework.expression.EvaluationContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.expression.common.ExpressionUtils float toFloat(org.springframework.expression.TypeConverter, org.springframework.expression.TypedValue) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.expression.common.ExpressionUtils short toShort(org.springframework.expression.TypeConverter, org.springframework.expression.TypedValue) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.expression.common.ExpressionUtils long toLong(org.springframework.expression.TypeConverter, org.springframework.expression.TypedValue) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.expression.common.LiteralExpression java.lang.Class&lt;?&gt; getValueType(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.expression.common.TemplateAwareExpressionParser org.springframework.expression.Expression doParseExpression(java.lang.String, org.springframework.expression.ParserContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.expression.common.ExpressionUtils char toChar(org.springframework.expression.TypeConverter, org.springframework.expression.TypedValue) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.expression.common.CompositeStringExpression java.lang.Class&lt;?&gt; getValueType(org.springframework.expression.EvaluationContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.expression.common.ExpressionUtils double toDouble(org.springframework.expression.TypeConverter, org.springframework.expression.TypedValue) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.expression.common.ExpressionUtils int toInt(org.springframework.expression.TypeConverter, org.springframework.expression.TypedValue) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.expression.common.ExpressionUtils byte toByte(org.springframework.expression.TypeConverter, org.springframework.expression.TypedValue) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.expression.common.LiteralExpression java.lang.Class&lt;?&gt; getValueType(org.springframework.expression.EvaluationContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.expression.common.LiteralExpression java.lang.Class&lt;?&gt; getValueType(org.springframework.expression.EvaluationContext, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.expression.common.ExpressionUtils T convertTypedValue(org.springframework.expression.EvaluationContext, org.springframework.expression.TypedValue, java.lang.Class&lt;T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.expression.common.ExpressionUtils boolean toBoolean(org.springframework.expression.TypeConverter, org.springframework.expression.TypedValue) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.expression.common.ExpressionUtils float toFloat(org.springframework.expression.TypeConverter, org.springframework.expression.TypedValue) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.expression.common.LiteralExpression org.springframework.core.convert.TypeDescriptor getValueTypeDescriptor(org.springframework.expression.EvaluationContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.expression.common.CompositeStringExpression org.springframework.core.convert.TypeDescriptor getValueTypeDescriptor(org.springframework.expression.EvaluationContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.expression.common.LiteralExpression void setValue(org.springframework.expression.EvaluationContext, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.expression.common.CompositeStringExpression boolean isWritable(org.springframework.expression.EvaluationContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.expression.common.CompositeStringExpression java.lang.Class&lt;?&gt; getValueType(org.springframework.expression.EvaluationContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.expression.common.ExpressionUtils short toShort(org.springframework.expression.TypeConverter, org.springframework.expression.TypedValue) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.expression.common.ExpressionUtils long toLong(org.springframework.expression.TypeConverter, org.springframework.expression.TypedValue) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
