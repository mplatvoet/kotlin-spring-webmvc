<root>
    <item name='org.springframework.context.annotation.AnnotationConfigApplicationContext AnnotationConfigApplicationContext(java.lang.Class&lt;?&gt;...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AnnotationConfigUtils java.util.Set&lt;org.springframework.beans.factory.config.BeanDefinitionHolder&gt; registerAnnotationConfigProcessors(org.springframework.beans.factory.support.BeanDefinitionRegistry, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.FilterType ANNOTATION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AnnotationConfigUtils REQUIRED_ANNOTATION_PROCESSOR_BEAN_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ComponentScanBeanDefinitionParser org.springframework.context.annotation.ClassPathBeanDefinitionScanner createScanner(org.springframework.beans.factory.xml.XmlReaderContext, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ComponentScanBeanDefinitionParser void registerComponents(org.springframework.beans.factory.xml.XmlReaderContext, java.util.Set&lt;org.springframework.beans.factory.config.BeanDefinitionHolder&gt;, org.w3c.dom.Element) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AnnotationScopeMetadataResolver org.springframework.context.annotation.ScopeMetadata resolveScopeMetadata(org.springframework.beans.factory.config.BeanDefinition)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ComponentScanBeanDefinitionParser org.springframework.context.annotation.ClassPathBeanDefinitionScanner configureScanner(org.springframework.beans.factory.xml.ParserContext, org.w3c.dom.Element) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AnnotationBeanNameGenerator java.lang.String generateBeanName(org.springframework.beans.factory.config.BeanDefinition, org.springframework.beans.factory.support.BeanDefinitionRegistry) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.MBeanExportConfiguration.SpecificPlatform WEBLOGIC'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ImportBeanDefinitionRegistrar void registerBeanDefinitions(org.springframework.core.type.AnnotationMetadata, org.springframework.beans.factory.support.BeanDefinitionRegistry) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.context.annotation.Jsr330ScopeMetadataResolver void registerScope(java.lang.Class&lt;?&gt;, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AnnotationConfigRegistry void scan(java.lang.String...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver boolean isLazy(org.springframework.beans.factory.config.DependencyDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver java.lang.Object buildLazyResolutionProxy(org.springframework.beans.factory.config.DependencyDescriptor, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider java.util.Set&lt;org.springframework.beans.factory.config.BeanDefinition&gt; findCandidateComponents(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AnnotationBeanNameGenerator java.lang.String determineBeanNameFromAnnotation(org.springframework.beans.factory.annotation.AnnotatedBeanDefinition) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AnnotationBeanNameGenerator boolean isStereotypeWithNameValue(java.lang.String, java.util.Set&lt;java.lang.String&gt;, java.util.Map&lt;java.lang.String,java.lang.Object&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ClassPathBeanDefinitionScanner java.util.Set&lt;org.springframework.beans.factory.config.BeanDefinitionHolder&gt; doScan(java.lang.String...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AnnotationConfigUtils CONFIGURATION_ANNOTATION_PROCESSOR_BEAN_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.EnableLoadTimeWeaving.AspectJWeaving ENABLED'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AnnotationConfigApplicationContext void scan(java.lang.String...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AnnotationConfigUtils void processCommonDefinitionAnnotations(org.springframework.beans.factory.annotation.AnnotatedBeanDefinition) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ScopedProxyMode INTERFACES'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ComponentScanBeanDefinitionParser void parseTypeFilters(org.w3c.dom.Element, org.springframework.context.annotation.ClassPathBeanDefinitionScanner, org.springframework.beans.factory.xml.XmlReaderContext, org.springframework.beans.factory.xml.ParserContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ComponentScanBeanDefinitionParser void registerComponents(org.springframework.beans.factory.xml.XmlReaderContext, java.util.Set&lt;org.springframework.beans.factory.config.BeanDefinitionHolder&gt;, org.w3c.dom.Element) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ScopeMetadataResolver org.springframework.context.annotation.ScopeMetadata resolveScopeMetadata(org.springframework.beans.factory.config.BeanDefinition)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.context.annotation.FilterType CUSTOM'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ConfigurationClassPostProcessor void enhanceConfigurationClasses(org.springframework.beans.factory.config.ConfigurableListableBeanFactory) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AdviceModeImportSelector DEFAULT_ADVICE_MODE_ATTRIBUTE_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ComponentScanBeanDefinitionParser org.springframework.core.type.filter.TypeFilter createTypeFilter(org.w3c.dom.Element, java.lang.ClassLoader) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ComponentScanBeanDefinitionParser void registerComponents(org.springframework.beans.factory.xml.XmlReaderContext, java.util.Set&lt;org.springframework.beans.factory.config.BeanDefinitionHolder&gt;, org.w3c.dom.Element) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ConfigurationClassPostProcessor void postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.FilterType ASPECTJ'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AnnotationConfigUtils PERSISTENCE_ANNOTATION_PROCESSOR_BEAN_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ScannedGenericBeanDefinition ScannedGenericBeanDefinition(org.springframework.core.type.classreading.MetadataReader) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.LoadTimeWeavingConfiguration void setImportMetadata(org.springframework.core.type.AnnotationMetadata) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.LoadTimeWeavingConfiguration org.springframework.instrument.classloading.LoadTimeWeaver loadTimeWeaver()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.CommonAnnotationBeanPostProcessor java.lang.Object getResource(org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.LookupElement, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ConfigurationClassPostProcessor void postProcessBeanDefinitionRegistry(org.springframework.beans.factory.support.BeanDefinitionRegistry) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ImportSelector java.lang.String[] selectImports(org.springframework.core.type.AnnotationMetadata) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.context.annotation.ConfigurationCondition.ConfigurationPhase PARSE_CONFIGURATION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.CommonAnnotationBeanPostProcessor java.lang.Object autowireResource(org.springframework.beans.factory.BeanFactory, org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.LookupElement, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AutoProxyRegistrar void registerBeanDefinitions(org.springframework.core.type.AnnotationMetadata, org.springframework.beans.factory.support.BeanDefinitionRegistry) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ClassPathBeanDefinitionScanner int scan(java.lang.String...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.LookupElement org.springframework.beans.factory.config.DependencyDescriptor getDependencyDescriptor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AnnotationBeanNameGenerator java.lang.String buildDefaultBeanName(org.springframework.beans.factory.config.BeanDefinition) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ComponentScanBeanDefinitionParser org.springframework.context.annotation.ClassPathBeanDefinitionScanner createScanner(org.springframework.beans.factory.xml.XmlReaderContext, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ScopedProxyMode DEFAULT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ImportAware void setImportMetadata(org.springframework.core.type.AnnotationMetadata) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.context.annotation.EnableLoadTimeWeaving.AspectJWeaving DISABLED'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AdviceModeImportSelector java.lang.String[] selectImports(org.springframework.core.type.AnnotationMetadata) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ComponentScanBeanDefinitionParser void parseBeanNameGenerator(org.w3c.dom.Element, org.springframework.context.annotation.ClassPathBeanDefinitionScanner) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AnnotationConfigUtils AUTOWIRED_ANNOTATION_PROCESSOR_BEAN_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ComponentScanBeanDefinitionParser void parseScope(org.w3c.dom.Element, org.springframework.context.annotation.ClassPathBeanDefinitionScanner) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.MBeanExportConfiguration.SpecificPlatform WEBSPHERE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AnnotationConfigBeanDefinitionParser org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AdviceModeImportSelector java.lang.String[] selectImports(org.springframework.context.annotation.AdviceMode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.context.annotation.AdviceMode ASPECTJ'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.FilterType REGEX'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ClassPathBeanDefinitionScanner java.util.Set&lt;org.springframework.beans.factory.config.BeanDefinitionHolder&gt; doScan(java.lang.String...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.MBeanExportConfiguration void setImportMetadata(org.springframework.core.type.AnnotationMetadata) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AnnotationConfigRegistry void register(java.lang.Class&lt;?&gt;...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.context.annotation.EnableLoadTimeWeaving.AspectJWeaving AUTODETECT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ComponentScanBeanDefinitionParser org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ConfigurationCondition.ConfigurationPhase REGISTER_BEAN'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AnnotationConfigUtils java.util.Set&lt;org.springframework.beans.factory.config.BeanDefinitionHolder&gt; registerAnnotationConfigProcessors(org.springframework.beans.factory.support.BeanDefinitionRegistry, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ConfigurationClassPostProcessor void processConfigBeanDefinitions(org.springframework.beans.factory.support.BeanDefinitionRegistry) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver java.lang.Object getLazyResolutionProxyIfNecessary(org.springframework.beans.factory.config.DependencyDescriptor, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ComponentScanBeanDefinitionParser org.springframework.context.annotation.ClassPathBeanDefinitionScanner configureScanner(org.springframework.beans.factory.xml.ParserContext, org.w3c.dom.Element) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ClassPathBeanDefinitionScanner void postProcessBeanDefinition(org.springframework.beans.factory.support.AbstractBeanDefinition, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.CommonAnnotationBeanPostProcessor org.springframework.beans.PropertyValues postProcessPropertyValues(org.springframework.beans.PropertyValues, java.beans.PropertyDescriptor[], java.lang.Object, java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.CommonAnnotationBeanPostProcessor java.lang.Object autowireResource(org.springframework.beans.factory.BeanFactory, org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.LookupElement, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AdviceModeImportSelector java.lang.String getAdviceModeAttributeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AnnotationBeanNameGenerator java.lang.String buildDefaultBeanName(org.springframework.beans.factory.config.BeanDefinition, org.springframework.beans.factory.support.BeanDefinitionRegistry) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ScopedProxyMode NO'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AnnotatedBeanDefinitionReader void register(java.lang.Class&lt;?&gt;...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AnnotationConfigBeanDefinitionParser org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AnnotationConfigApplicationContext void register(java.lang.Class&lt;?&gt;...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.FilterType ASSIGNABLE_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AdviceMode PROXY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AnnotationConfigUtils void registerAnnotationConfigProcessors(org.springframework.beans.factory.support.BeanDefinitionRegistry) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.Jsr330ScopeMetadataResolver org.springframework.context.annotation.ScopeMetadata resolveScopeMetadata(org.springframework.beans.factory.config.BeanDefinition)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.MBeanExportConfiguration org.springframework.jmx.export.annotation.AnnotationMBeanExporter mbeanExporter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ComponentScanBeanDefinitionParser org.springframework.context.annotation.ClassPathBeanDefinitionScanner configureScanner(org.springframework.beans.factory.xml.ParserContext, org.w3c.dom.Element)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AnnotationConfigUtils CONFIGURATION_BEAN_NAME_GENERATOR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider boolean isCandidateComponent(org.springframework.beans.factory.annotation.AnnotatedBeanDefinition) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ComponentScanBeanDefinitionParser org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AnnotationConfigUtils COMMON_ANNOTATION_PROCESSOR_BEAN_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.ScopedProxyMode TARGET_CLASS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.AnnotationConfigApplicationContext AnnotationConfigApplicationContext(java.lang.String...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.annotation.Condition boolean matches(org.springframework.context.annotation.ConditionContext, org.springframework.core.type.AnnotatedTypeMetadata) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.context.annotation.ComponentScanBeanDefinitionParser void parseTypeFilters(org.w3c.dom.Element, org.springframework.context.annotation.ClassPathBeanDefinitionScanner, org.springframework.beans.factory.xml.XmlReaderContext, org.springframework.beans.factory.xml.ParserContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
