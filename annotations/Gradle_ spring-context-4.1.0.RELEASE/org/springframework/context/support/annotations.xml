<root>
    <item name='org.springframework.context.support.StaticMessageSource java.text.MessageFormat resolveCode(java.lang.String, java.util.Locale) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.AbstractApplicationContext org.springframework.core.io.support.ResourcePatternResolver getResourcePatternResolver()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.AbstractMessageSource java.text.MessageFormat resolveCode(java.lang.String, java.util.Locale) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.context.support.LiveBeansView java.lang.String generateJson(java.util.Set&lt;org.springframework.context.ConfigurableApplicationContext&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.ResourceBundleMessageSource java.text.MessageFormat resolveCode(java.lang.String, java.util.Locale) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.context.support.LiveBeansView MBEAN_APPLICATION_KEY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.ReloadableResourceBundleMessageSource java.util.List&lt;java.lang.String&gt; calculateFilenamesForLocale(java.lang.String, java.util.Locale) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.ReloadableResourceBundleMessageSource java.util.List&lt;java.lang.String&gt; calculateFilenamesForLocale(java.lang.String, java.util.Locale)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.ReloadableResourceBundleMessageSource java.util.Properties loadProperties(org.springframework.core.io.Resource, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.StaticApplicationContext void addMessage(java.lang.String, java.util.Locale, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.AbstractApplicationContext void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.GenericXmlApplicationContext org.springframework.beans.factory.xml.XmlBeanDefinitionReader getReader()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.DefaultLifecycleProcessor java.util.Map&lt;java.lang.String,org.springframework.context.Lifecycle&gt; getLifecycleBeans()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.LiveBeansView boolean isBeanEligible(java.lang.String, org.springframework.beans.factory.config.BeanDefinition, org.springframework.beans.factory.config.ConfigurableBeanFactory) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.ClassPathXmlApplicationContext ClassPathXmlApplicationContext(java.lang.String[], java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.ReloadableResourceBundleMessageSource java.lang.String resolveCodeWithoutArguments(java.lang.String, java.util.Locale) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.context.support.GenericGroovyApplicationContext GenericGroovyApplicationContext(java.lang.Class&lt;?&gt;, java.lang.String...) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.StaticMessageSource java.lang.String resolveCodeWithoutArguments(java.lang.String, java.util.Locale) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.AbstractXmlApplicationContext void initBeanDefinitionReader(org.springframework.beans.factory.xml.XmlBeanDefinitionReader) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.AbstractApplicationContext void finishBeanFactoryInitialization(org.springframework.beans.factory.config.ConfigurableListableBeanFactory) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.DefaultMessageSourceResolvable DefaultMessageSourceResolvable(org.springframework.context.MessageSourceResolvable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.AbstractMessageSource java.lang.String getMessage(java.lang.String, java.lang.Object[], java.util.Locale)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.PropertySourcesPlaceholderConfigurer void processProperties(org.springframework.beans.factory.config.ConfigurableListableBeanFactory, org.springframework.core.env.ConfigurablePropertyResolver) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.AbstractApplicationContext APPLICATION_EVENT_MULTICASTER_BEAN_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.PropertySourcesPlaceholderConfigurer ENVIRONMENT_PROPERTIES_PROPERTY_SOURCE_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.GenericXmlApplicationContext void load(java.lang.Class&lt;?&gt;, java.lang.String...) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.GenericXmlApplicationContext GenericXmlApplicationContext(java.lang.Class&lt;?&gt;, java.lang.String...) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.ReloadableResourceBundleMessageSource org.springframework.context.support.ReloadableResourceBundleMessageSource.PropertiesHolder getMergedProperties(java.util.Locale)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.ReloadableResourceBundleMessageSource org.springframework.context.support.ReloadableResourceBundleMessageSource.PropertiesHolder getProperties(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.ConversionServiceFactoryBean java.lang.Class&lt;? extends org.springframework.core.convert.ConversionService&gt; getObjectType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.AbstractApplicationContext org.springframework.core.env.ConfigurableEnvironment createEnvironment()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.MessageSourceSupport java.text.MessageFormat createMessageFormat(java.lang.String, java.util.Locale)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.AbstractApplicationContext void prepareBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.StaticMessageSource void addMessages(java.util.Map&lt;java.lang.String,java.lang.String&gt;, java.util.Locale) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.GenericGroovyApplicationContext org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader getReader()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.ResourceBundleMessageSource java.lang.String resolveCodeWithoutArguments(java.lang.String, java.util.Locale) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.context.support.StaticMessageSource void addMessage(java.lang.String, java.util.Locale, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.ReloadableResourceBundleMessageSource java.util.List&lt;java.lang.String&gt; calculateAllFilenames(java.lang.String, java.util.Locale)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.AbstractMessageSource java.lang.String getMessage(org.springframework.context.MessageSourceResolvable, java.util.Locale) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.AbstractApplicationContext java.lang.String getMessage(org.springframework.context.MessageSourceResolvable, java.util.Locale) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.context.support.AbstractRefreshableApplicationContext org.springframework.beans.factory.support.DefaultListableBeanFactory createBeanFactory()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.GenericGroovyApplicationContext void load(java.lang.Class&lt;?&gt;, java.lang.String...) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.ApplicationObjectSupport java.lang.Class&lt;?&gt; requiredContextClass()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.PropertySourcesPlaceholderConfigurer LOCAL_PROPERTIES_PROPERTY_SOURCE_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.ReloadableResourceBundleMessageSource java.text.MessageFormat resolveCode(java.lang.String, java.util.Locale) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.context.support.FileSystemXmlApplicationContext org.springframework.core.io.Resource getResourceByPath(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.LiveBeansView MBEAN_DOMAIN_PROPERTY_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.StaticApplicationContext org.springframework.context.support.StaticMessageSource getStaticMessageSource()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.ReloadableResourceBundleMessageSource org.springframework.context.support.ReloadableResourceBundleMessageSource.PropertiesHolder refreshProperties(java.lang.String, org.springframework.context.support.ReloadableResourceBundleMessageSource.PropertiesHolder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.ReloadableResourceBundleMessageSource java.util.Properties loadProperties(org.springframework.core.io.Resource, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.AbstractApplicationContext LIFECYCLE_PROCESSOR_BEAN_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.LiveBeansView java.util.Set&lt;org.springframework.context.ConfigurableApplicationContext&gt; findApplicationContexts()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.AbstractApplicationContext void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.ClassPathXmlApplicationContext ClassPathXmlApplicationContext(java.lang.String[], java.lang.Class&lt;?&gt;, org.springframework.context.ApplicationContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.AbstractApplicationContext MESSAGE_SOURCE_BEAN_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.AbstractApplicationContext java.lang.String getApplicationName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.ConversionServiceFactoryBean org.springframework.core.convert.support.GenericConversionService createConversionService()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.AbstractMessageSource java.lang.String resolveCodeWithoutArguments(java.lang.String, java.util.Locale) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.context.support.AbstractApplicationContext java.util.List&lt;org.springframework.beans.factory.config.BeanFactoryPostProcessor&gt; getBeanFactoryPostProcessors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.context.support.DelegatingMessageSource java.lang.String getMessage(org.springframework.context.MessageSourceResolvable, java.util.Locale) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
</root>
