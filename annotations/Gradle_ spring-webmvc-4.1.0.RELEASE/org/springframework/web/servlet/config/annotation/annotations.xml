<root>
    <item name='org.springframework.web.servlet.config.annotation.InterceptorRegistry org.springframework.web.servlet.config.annotation.InterceptorRegistration addInterceptor(org.springframework.web.servlet.HandlerInterceptor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer favorParameter(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.PathMatchConfigurer org.springframework.web.servlet.config.annotation.PathMatchConfigurer setPathMatcher(org.springframework.util.PathMatcher)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport void addDefaultHttpMessageConverters(java.util.List&lt;org.springframework.http.converter.HttpMessageConverter&lt;?&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration setKeepQueryParams(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ResourceChainRegistration org.springframework.web.servlet.config.annotation.ResourceChainRegistration addTransformer(org.springframework.web.servlet.resource.ResourceTransformer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport org.springframework.web.servlet.HandlerMapping viewControllerHandlerMapping()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport org.springframework.web.method.support.CompositeUriComponentsContributor mvcUriComponentsContributor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ViewControllerRegistry org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration addRedirectViewController(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer mediaType(java.lang.String, org.springframework.http.MediaType)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport org.springframework.web.bind.support.ConfigurableWebBindingInitializer getConfigurableWebBindingInitializer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration setStatusCode(org.springframework.http.HttpStatus)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration addResourceHandler(java.lang.String...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.InterceptorRegistration org.springframework.web.servlet.config.annotation.InterceptorRegistration excludePathPatterns(java.lang.String...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration viewClass(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport org.springframework.web.servlet.HandlerMapping defaultServletHandlerMapping()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration prefix(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ViewResolverRegistry org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration tiles()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration addResourceLocations(java.lang.String...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter httpRequestHandlerAdapter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration org.springframework.web.servlet.resource.ResourceHttpRequestHandler getRequestHandler()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration setStatusCode(org.springframework.http.HttpStatus) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ResourceChainRegistration org.springframework.web.servlet.config.annotation.ResourceChainRegistration addResolver(org.springframework.web.servlet.resource.ResourceResolver)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer replaceMediaTypes(java.util.Map&lt;java.lang.String,org.springframework.http.MediaType&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer setDefaultTimeout(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration cache(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.PathMatchConfigurer org.springframework.web.servlet.config.annotation.PathMatchConfigurer setUseTrailingSlashMatch(java.lang.Boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer ignoreUnknownPathExtensions(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration org.springframework.web.servlet.mvc.ParameterizableViewController getViewController()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport org.springframework.web.servlet.HandlerMapping resourceHandlerMapping()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration viewClass(java.lang.Class&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer ignoreAcceptHeader(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration attributes(java.util.Map&lt;java.lang.String,?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ViewControllerRegistry org.springframework.web.servlet.config.annotation.ViewControllerRegistration addViewController(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer setTaskExecutor(org.springframework.core.task.AsyncTaskExecutor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter simpleControllerHandlerAdapter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport java.util.Map&lt;java.lang.String,org.springframework.http.MediaType&gt; getDefaultMediaTypes()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer favorPathExtension(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry setOrder(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping beanNameHandlerMapping()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ViewResolverRegistry org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration freeMarker()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ViewResolverRegistry org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration groovy()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.InterceptorRegistration org.springframework.web.servlet.config.annotation.InterceptorRegistration addPathPatterns(java.lang.String...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration viewNames(java.lang.String...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ViewResolverRegistry org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration jsp()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ViewControllerRegistration org.springframework.web.servlet.mvc.ParameterizableViewController getViewController()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.PathMatchConfigurer org.springframework.web.servlet.config.annotation.PathMatchConfigurer setUseRegisteredSuffixPatternMatch(java.lang.Boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer registerCallableInterceptors(org.springframework.web.context.request.async.CallableProcessingInterceptor...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration addResourceLocations(java.lang.String...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.InterceptorRegistration org.springframework.web.servlet.config.annotation.InterceptorRegistration pathMatcher(org.springframework.util.PathMatcher)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport org.springframework.web.servlet.ViewResolver mvcViewResolver()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer defaultContentType(org.springframework.http.MediaType)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.InterceptorRegistry java.util.List&lt;java.lang.Object&gt; getInterceptors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer mediaTypes(java.util.Map&lt;java.lang.String,org.springframework.http.MediaType&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer java.util.List&lt;org.springframework.web.context.request.async.DeferredResultProcessingInterceptor&gt; getDeferredResultInterceptors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ViewResolverRegistry org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration velocity()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.PathMatchConfigurer org.springframework.web.servlet.config.annotation.PathMatchConfigurer setUrlPathHelper(org.springframework.web.util.UrlPathHelper)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer java.util.List&lt;org.springframework.web.context.request.async.CallableProcessingInterceptor&gt; getCallableInterceptors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer registerDeferredResultInterceptors(org.springframework.web.context.request.async.DeferredResultProcessingInterceptor...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration suffix(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ViewResolverRegistry org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration jsp(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport org.springframework.format.support.FormattingConversionService mvcConversionService()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ViewControllerRegistration org.springframework.web.servlet.config.annotation.ViewControllerRegistration setStatusCode(org.springframework.http.HttpStatus)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport void addDefaultHandlerExceptionResolvers(java.util.List&lt;org.springframework.web.servlet.HandlerExceptionResolver&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport org.springframework.web.servlet.HandlerExceptionResolver handlerExceptionResolver()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.PathMatchConfigurer org.springframework.web.servlet.config.annotation.PathMatchConfigurer setUseSuffixPatternMatch(java.lang.Boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration cacheLimit(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration setContextRelative(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport org.springframework.web.servlet.resource.ResourceUrlProvider mvcResourceUrlProvider()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ResourceChainRegistration java.util.List&lt;org.springframework.web.servlet.resource.ResourceTransformer&gt; getResourceTransformers()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.InterceptorRegistry org.springframework.web.servlet.config.annotation.InterceptorRegistration addWebRequestInterceptor(org.springframework.web.context.request.WebRequestInterceptor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer useJaf(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration setCachePeriod(java.lang.Integer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ResourceChainRegistration java.util.List&lt;org.springframework.web.servlet.resource.ResourceResolver&gt; getResourceResolvers()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer parameterName(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
