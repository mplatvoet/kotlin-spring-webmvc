<root>
    <item name='org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter org.springframework.http.HttpInputMessage createHttpInputMessage(javax.servlet.http.HttpServletRequest)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping void addUrlsForPath(java.util.Set&lt;java.lang.String&gt;, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver org.springframework.web.servlet.ModelAndView resolveResponseStatus(org.springframework.web.bind.annotation.ResponseStatus, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver org.springframework.web.servlet.ModelAndView doResolveException(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.mvc.annotation.ModelAndViewResolver UNRESOLVED'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter PAGE_NOT_FOUND_LOG_CATEGORY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver org.springframework.web.servlet.ModelAndView resolveResponseStatus(org.springframework.web.bind.annotation.ResponseStatus, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver org.springframework.web.servlet.ModelAndView resolveResponseStatus(org.springframework.web.bind.annotation.ResponseStatus, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter org.springframework.web.servlet.ModelAndView handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver java.util.List&lt;java.lang.Class&lt;? extends java.lang.Throwable&gt;&gt; getHandledExceptions(java.lang.reflect.Method)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter org.springframework.http.HttpOutputMessage createHttpOutputMessage(javax.servlet.http.HttpServletResponse)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver java.lang.Object resolveStandardArgument(java.lang.Class&lt;?&gt;, org.springframework.web.context.request.NativeWebRequest, java.lang.Exception) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver org.springframework.web.servlet.ModelAndView doResolveException(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping void validateMapping(org.springframework.web.bind.annotation.RequestMapping, javax.servlet.http.HttpServletRequest) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter org.springframework.web.bind.ServletRequestDataBinder createBinder(javax.servlet.http.HttpServletRequest, java.lang.Object, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping void validateHandler(java.lang.Object, javax.servlet.http.HttpServletRequest) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter org.springframework.web.servlet.ModelAndView invokeHandlerMethod(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping void validateHandler(java.lang.Object, javax.servlet.http.HttpServletRequest) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping java.lang.String[] determineUrlsForHandler(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
</root>
