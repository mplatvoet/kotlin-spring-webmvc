<root>
    <item name='org.springframework.core.convert.support.GenericConversionService void addConverter(java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;, org.springframework.core.convert.converter.Converter&lt;?,?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.core.convert.support.GenericConversionService void addConverter(org.springframework.core.convert.converter.Converter&lt;?,?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.core.convert.support.GenericConversionService java.lang.Object convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.core.convert.support.GenericConversionService boolean canConvert(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.core.convert.support.GenericConversionService void addConverterFactory(org.springframework.core.convert.converter.ConverterFactory&lt;?,?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.core.convert.support.GenericConversionService void addConverter(java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;, org.springframework.core.convert.converter.Converter&lt;?,?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.core.convert.support.GenericConversionService java.lang.Object convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.core.convert.support.GenericConversionService T convert(java.lang.Object, java.lang.Class&lt;T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.core.convert.support.DefaultConversionService void addDefaultConverters(org.springframework.core.convert.converter.ConverterRegistry) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.core.convert.support.ConversionServiceFactory void addDefaultConverters(org.springframework.core.convert.support.GenericConversionService) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.core.convert.support.GenericConversionService java.lang.Object convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.core.convert.support.GenericConversionService org.springframework.core.convert.converter.GenericConverter getDefaultConverter(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.core.convert.support.GenericConversionService org.springframework.core.convert.converter.GenericConverter getDefaultConverter(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.core.convert.support.ConvertingPropertyEditorAdapter ConvertingPropertyEditorAdapter(org.springframework.core.convert.ConversionService, org.springframework.core.convert.TypeDescriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.core.convert.support.ConvertingPropertyEditorAdapter ConvertingPropertyEditorAdapter(org.springframework.core.convert.ConversionService, org.springframework.core.convert.TypeDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.core.convert.support.GenericConversionService void addConverter(org.springframework.core.convert.converter.GenericConverter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.core.convert.support.GenericConversionService boolean canBypassConvert(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.core.convert.support.GenericConversionService void removeConvertible(java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.core.convert.support.ConversionServiceFactory org.springframework.core.convert.support.GenericConversionService createDefaultConversionService()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.core.convert.support.GenericConversionService void removeConvertible(java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.core.convert.support.GenericConversionService boolean canConvert(java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
