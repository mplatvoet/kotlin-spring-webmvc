<root>
    <item name='org.springframework.cglib.transform.impl.AddDelegateTransformer void begin_class(int, int, java.lang.String, org.springframework.asm.Type, org.springframework.asm.Type[], java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.cglib.transform.impl.FieldProviderTransformer void begin_class(int, int, java.lang.String, org.springframework.asm.Type, org.springframework.asm.Type[], java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.cglib.transform.impl.AddDelegateTransformer org.springframework.cglib.core.CodeEmitter begin_method(int, org.springframework.cglib.core.Signature, org.springframework.asm.Type[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.cglib.transform.impl.AddInitTransformer AddInitTransformer(java.lang.reflect.Method) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.cglib.transform.impl.InterceptFieldTransformer void begin_class(int, int, java.lang.String, org.springframework.asm.Type, org.springframework.asm.Type[], java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.cglib.transform.impl.InterceptFieldTransformer org.springframework.cglib.core.CodeEmitter begin_method(int, org.springframework.cglib.core.Signature, org.springframework.asm.Type[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.cglib.transform.impl.UndeclaredThrowableTransformer UndeclaredThrowableTransformer(java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.cglib.transform.impl.AddStaticInitTransformer AddStaticInitTransformer(java.lang.reflect.Method) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.cglib.transform.impl.UndeclaredThrowableTransformer org.springframework.cglib.core.CodeEmitter begin_method(int, org.springframework.cglib.core.Signature, org.springframework.asm.Type[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.cglib.transform.impl.AddDelegateTransformer AddDelegateTransformer(java.lang.Class[], java.lang.Class) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.cglib.transform.impl.AddPropertyTransformer AddPropertyTransformer(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.cglib.transform.impl.AddInitTransformer org.springframework.cglib.core.CodeEmitter begin_method(int, org.springframework.cglib.core.Signature, org.springframework.asm.Type[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.cglib.transform.impl.InterceptFieldTransformer org.springframework.cglib.core.CodeEmitter begin_method(int, org.springframework.cglib.core.Signature, org.springframework.asm.Type[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.cglib.transform.impl.UndeclaredThrowableStrategy org.springframework.cglib.core.ClassGenerator transform(org.springframework.cglib.core.ClassGenerator)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
