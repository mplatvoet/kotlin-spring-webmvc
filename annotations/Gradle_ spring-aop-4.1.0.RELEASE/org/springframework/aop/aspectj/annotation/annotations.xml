<root>
    <item name='org.springframework.aop.aspectj.annotation.BeanFactoryAspectInstanceFactory BeanFactoryAspectInstanceFactory(org.springframework.beans.factory.BeanFactory, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator java.util.List&lt;org.springframework.aop.Advisor&gt; findCandidateAdvisors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory org.springframework.aop.aspectj.AspectJExpressionPointcut createPointcutExpression(java.lang.reflect.Method, java.lang.Class&lt;?&gt;, java.lang.String[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory org.springframework.aop.aspectj.AspectJExpressionPointcut createPointcutExpression(java.lang.reflect.Method, java.lang.Class&lt;?&gt;, java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.SimpleMetadataAwareAspectInstanceFactory org.springframework.aop.aspectj.annotation.AspectMetadata getAspectMetadata()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.AspectMetadata org.aspectj.lang.reflect.AjType&lt;?&gt; getAjType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory parameterNameDiscoverer'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.AspectJAdvisorFactory org.aopalliance.aop.Advice getAdvice(java.lang.reflect.Method, org.springframework.aop.aspectj.AspectJExpressionPointcut, org.springframework.aop.aspectj.annotation.MetadataAwareAspectInstanceFactory, int, java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.BeanFactoryAspectInstanceFactory BeanFactoryAspectInstanceFactory(org.springframework.beans.factory.BeanFactory, java.lang.String, java.lang.Class&lt;?&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory.AspectJAnnotation A getAnnotation()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.AspectJAdvisorFactory void validate(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator void setIncludePatterns(java.util.List&lt;java.lang.String&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory java.util.List&lt;org.springframework.aop.Advisor&gt; getAdvisors(org.springframework.aop.aspectj.annotation.MetadataAwareAspectInstanceFactory)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory org.aopalliance.aop.Advice getAdvice(java.lang.reflect.Method, org.springframework.aop.aspectj.AspectJExpressionPointcut, org.springframework.aop.aspectj.annotation.MetadataAwareAspectInstanceFactory, int, java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.SingletonMetadataAwareAspectInstanceFactory SingletonMetadataAwareAspectInstanceFactory(java.lang.Object, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.AspectMetadata AspectMetadata(java.lang.Class&lt;?&gt;, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.MetadataAwareAspectInstanceFactory org.springframework.aop.aspectj.annotation.AspectMetadata getAspectMetadata()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory org.springframework.aop.Advisor getAdvisor(java.lang.reflect.Method, org.springframework.aop.aspectj.annotation.MetadataAwareAspectInstanceFactory, int, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.BeanFactoryAspectInstanceFactory org.springframework.aop.aspectj.annotation.AspectMetadata getAspectMetadata()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.SingletonMetadataAwareAspectInstanceFactory org.springframework.aop.aspectj.annotation.AspectMetadata getAspectMetadata()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.NotAnAtAspectException NotAnAtAspectException(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory.AspectJAnnotationType AtAround'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory org.springframework.aop.aspectj.AspectJExpressionPointcut createPointcutExpression(java.lang.reflect.Method, java.lang.Class&lt;?&gt;, java.lang.String[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory java.util.List&lt;org.springframework.aop.Advisor&gt; getAdvisors(org.springframework.aop.aspectj.annotation.MetadataAwareAspectInstanceFactory) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.PrototypeAspectInstanceFactory PrototypeAspectInstanceFactory(org.springframework.beans.factory.BeanFactory, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory.AspectJAnnotationType AtBefore'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory.AspectJAnnotationType AtAfterThrowing'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory.AspectJAnnotationType AtAfter'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.SyntheticInstantiationAdvisor SyntheticInstantiationAdvisor(org.springframework.aop.aspectj.annotation.MetadataAwareAspectInstanceFactory) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.AspectJAdvisorFactory java.util.List&lt;org.springframework.aop.Advisor&gt; getAdvisors(org.springframework.aop.aspectj.annotation.MetadataAwareAspectInstanceFactory) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory.AspectJAnnotationType AtPointcut'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.AspectJProxyFactory void addAspect(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory void validate(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.SimpleMetadataAwareAspectInstanceFactory SimpleMetadataAwareAspectInstanceFactory(java.lang.Class&lt;?&gt;, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory.AspectJAnnotation AspectJAnnotation(A) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.AspectJProxyFactory void addAspect(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.AspectJAdvisorFactory java.util.List&lt;org.springframework.aop.Advisor&gt; getAdvisors(org.springframework.aop.aspectj.annotation.MetadataAwareAspectInstanceFactory)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory.AspectJAnnotationType AtAfterReturning'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.AspectMetadata org.springframework.aop.Pointcut getPerClausePointcut()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.aspectj.annotation.AspectJAdvisorFactory org.springframework.aop.Advisor getAdvisor(java.lang.reflect.Method, org.springframework.aop.aspectj.annotation.MetadataAwareAspectInstanceFactory, int, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
</root>
