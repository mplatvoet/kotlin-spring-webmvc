<root>
    <item name='org.springframework.aop.framework.AdvisedSupport void copyConfigurationFrom(org.springframework.aop.framework.AdvisedSupport, org.springframework.aop.TargetSource, java.util.List&lt;org.springframework.aop.Advisor&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.ReflectiveMethodInvocation org.aopalliance.intercept.MethodInvocation invocableClone(java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.AopProxyFactory org.springframework.aop.framework.AopProxy createAopProxy(org.springframework.aop.framework.AdvisedSupport)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.aop.framework.AdvisedSupport void copyConfigurationFrom(org.springframework.aop.framework.AdvisedSupport, org.springframework.aop.TargetSource, java.util.List&lt;org.springframework.aop.Advisor&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.AdvisorChainFactory java.util.List&lt;java.lang.Object&gt; getInterceptorsAndDynamicInterceptionAdvice(org.springframework.aop.framework.Advised, java.lang.reflect.Method, java.lang.Class&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.aop.framework.AopProxyUtils boolean equalsAdvisors(org.springframework.aop.framework.AdvisedSupport, org.springframework.aop.framework.AdvisedSupport) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.AdvisedSupport void copyConfigurationFrom(org.springframework.aop.framework.AdvisedSupport) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.DefaultAdvisorChainFactory java.util.List&lt;java.lang.Object&gt; getInterceptorsAndDynamicInterceptionAdvice(org.springframework.aop.framework.Advised, java.lang.reflect.Method, java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.AopContext java.lang.Object currentProxy()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.ProxyFactoryBean java.lang.Object getProxy(org.springframework.aop.framework.AopProxy) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.AopProxyUtils boolean equalsAdvisors(org.springframework.aop.framework.AdvisedSupport, org.springframework.aop.framework.AdvisedSupport) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.DefaultAopProxyFactory org.springframework.aop.framework.AopProxy createAopProxy(org.springframework.aop.framework.AdvisedSupport)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.ProxyFactory java.lang.Object getProxy(org.springframework.aop.TargetSource) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.AdvisedSupport void addInterface(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.AopProxyUtils java.lang.Class&lt;?&gt;[] completeProxiedInterfaces(org.springframework.aop.framework.AdvisedSupport)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.ProxyProcessorSupport boolean isInternalLanguageInterface(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.AdvisedSupport void setInterfaces(java.lang.Class&lt;?&gt;...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.AopProxyUtils java.lang.Class&lt;?&gt;[] proxiedUserInterfaces(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.DefaultAopProxyFactory org.springframework.aop.framework.AopProxy createAopProxy(org.springframework.aop.framework.AdvisedSupport) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.AdvisorChainFactory java.util.List&lt;java.lang.Object&gt; getInterceptorsAndDynamicInterceptionAdvice(org.springframework.aop.framework.Advised, java.lang.reflect.Method, java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.aop.framework.AdvisedSupport java.util.List&lt;java.lang.Object&gt; getInterceptorsAndDynamicInterceptionAdvice(java.lang.reflect.Method, java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.AopProxyUtils java.lang.Class&lt;?&gt;[] proxiedUserInterfaces(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.AopProxyUtils boolean equalsProxiedInterfaces(org.springframework.aop.framework.AdvisedSupport, org.springframework.aop.framework.AdvisedSupport) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.ReflectiveMethodInvocation org.aopalliance.intercept.MethodInvocation invocableClone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor java.lang.Object postProcessAfterInitialization(java.lang.Object, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.AopProxyUtils java.lang.Class&lt;?&gt;[] completeProxiedInterfaces(org.springframework.aop.framework.AdvisedSupport) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor boolean isEligible(java.lang.Object, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.AopProxyUtils boolean equalsProxiedInterfaces(org.springframework.aop.framework.AdvisedSupport, org.springframework.aop.framework.AdvisedSupport) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.ProxyProcessorSupport boolean isConfigurationCallbackInterface(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.ProxyConfig void copyFrom(org.springframework.aop.framework.ProxyConfig) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.AbstractSingletonProxyFactoryBean org.springframework.aop.TargetSource createTargetSource(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.AopProxyFactory org.springframework.aop.framework.AopProxy createAopProxy(org.springframework.aop.framework.AdvisedSupport) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.aop.framework.AdvisedSupport EMPTY_TARGET_SOURCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.DefaultAdvisorChainFactory java.util.List&lt;java.lang.Object&gt; getInterceptorsAndDynamicInterceptionAdvice(org.springframework.aop.framework.Advised, java.lang.reflect.Method, java.lang.Class&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.ProxyFactoryBean GLOBAL_SUFFIX'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.aop.framework.AdvisedSupport AdvisedSupport(java.lang.Class&lt;?&gt;[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
