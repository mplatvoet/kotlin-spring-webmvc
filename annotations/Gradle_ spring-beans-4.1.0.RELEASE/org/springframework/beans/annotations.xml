<root>
    <item name='org.springframework.beans.BeanWrapper java.beans.PropertyDescriptor[] getPropertyDescriptors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.beans.AbstractPropertyAccessor void setPropertyValues(org.springframework.beans.PropertyValues, boolean, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanUtils java.lang.reflect.Method findDeclaredMethodWithMinimalParameters(java.lang.Class&lt;?&gt;, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanUtils T instantiateClass(java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.PropertyAccessorUtils int getFirstNestedPropertySeparatorIndex(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.PropertyValue PropertyValue(org.springframework.beans.PropertyValue, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.AbstractPropertyAccessor void setPropertyValue(org.springframework.beans.PropertyValue) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanInstantiationException BeanInstantiationException(java.lang.Class&lt;?&gt;, java.lang.String, java.lang.Throwable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanUtils java.lang.reflect.Method findDeclaredMethod(java.lang.Class&lt;?&gt;, java.lang.String, java.lang.Class&lt;?&gt;...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanUtils java.lang.reflect.Method findMethod(java.lang.Class&lt;?&gt;, java.lang.String, java.lang.Class&lt;?&gt;...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanWrapperImpl org.springframework.beans.BeanWrapperImpl newNestedBeanWrapper(java.lang.Object, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.PropertyValues org.springframework.beans.PropertyValue getPropertyValue(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.beans.DirectFieldAccessor java.lang.Object getPropertyValue(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.beans.TypeMismatchException ERROR_CODE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.Mergeable java.lang.Object merge(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.beans.BeanWrapperImpl BeanWrapperImpl(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanUtils java.lang.reflect.Method resolveSignature(java.lang.String, java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.MutablePropertyValues org.springframework.beans.MutablePropertyValues addPropertyValue(org.springframework.beans.PropertyValue)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.InvalidPropertyException InvalidPropertyException(java.lang.Class&lt;?&gt;, java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.MethodInvocationException java.lang.String getErrorCode()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanInfoFactory java.beans.BeanInfo getBeanInfo(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.beans.PropertyEditorRegistrar void registerCustomEditors(org.springframework.beans.PropertyEditorRegistry) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.beans.BeanWrapperImpl void setPropertyValue(java.lang.String, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.PropertyAccessor PROPERTY_KEY_PREFIX'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.PropertyAccessor PROPERTY_KEY_SUFFIX'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.PropertyAccessorUtils boolean matchesProperty(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.CachedIntrospectionResults IGNORE_BEANINFO_PROPERTY_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanUtils T instantiateClass(java.lang.reflect.Constructor&lt;T&gt;, java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.TypeMismatchException java.lang.String getErrorCode()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanWrapperImpl java.beans.PropertyDescriptor getPropertyDescriptorInternal(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.AbstractPropertyAccessor java.lang.Object getPropertyValue(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.beans.PropertyBatchUpdateException void printStackTrace(java.io.PrintStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.PropertyAccessorFactory org.springframework.beans.BeanWrapper forBeanPropertyAccess(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.NullValueInNestedPathException NullValueInNestedPathException(java.lang.Class&lt;?&gt;, java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.PropertyAccessor void setPropertyValue(java.lang.String, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.beans.BeanInstantiationException BeanInstantiationException(java.lang.Class&lt;?&gt;, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanWrapperImpl void setPropertyValue(org.springframework.beans.PropertyValue) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanUtils T instantiateClass(java.lang.Class&lt;?&gt;, java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanUtils org.springframework.core.MethodParameter getWriteMethodParameter(java.beans.PropertyDescriptor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.TypeMismatchException TypeMismatchException(java.beans.PropertyChangeEvent, java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanUtils java.beans.PropertyDescriptor[] getPropertyDescriptors(java.lang.Class&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.NotWritablePropertyException NotWritablePropertyException(java.lang.Class&lt;?&gt;, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.InvalidPropertyException InvalidPropertyException(java.lang.Class&lt;?&gt;, java.lang.String, java.lang.String, java.lang.Throwable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.PropertyAccessor java.lang.Object getPropertyValue(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.beans.MutablePropertyValues java.util.List&lt;org.springframework.beans.PropertyValue&gt; getPropertyValueList()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.PropertyAccessor void setPropertyValues(org.springframework.beans.PropertyValues, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.beans.BeanUtils java.lang.reflect.Method findMethodWithMinimalParameters(java.lang.Class&lt;?&gt;, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.PropertyAccessor void setPropertyValue(org.springframework.beans.PropertyValue) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.beans.AbstractPropertyAccessor void setPropertyValues(org.springframework.beans.PropertyValues) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.PropertyAccessorFactory org.springframework.beans.ConfigurablePropertyAccessor forDirectFieldAccess(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.PropertyAccessor void setPropertyValues(org.springframework.beans.PropertyValues, boolean, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.beans.PropertyValue PropertyValue(org.springframework.beans.PropertyValue) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanUtils void copyProperties(java.lang.Object, java.lang.Object, java.lang.String...) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.NotWritablePropertyException NotWritablePropertyException(java.lang.Class&lt;?&gt;, java.lang.String, java.lang.String, java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanWrapperImpl java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.PropertyEditorRegistrySupport void copyDefaultEditorsTo(org.springframework.beans.PropertyEditorRegistrySupport) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanWrapperImpl org.springframework.beans.BeanWrapperImpl newNestedBeanWrapper(java.lang.Object, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanUtils org.springframework.core.MethodParameter getWriteMethodParameter(java.beans.PropertyDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanUtils void copyProperties(java.lang.Object, java.lang.Object, java.lang.Class&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.MutablePropertyValues org.springframework.beans.MutablePropertyValues add(java.lang.String, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanMetadataAttributeAccessor void addMetadataAttribute(org.springframework.beans.BeanMetadataAttribute) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.MutablePropertyValues org.springframework.beans.PropertyValues changesSince(org.springframework.beans.PropertyValues)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanWrapperImpl BeanWrapperImpl(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.NotWritablePropertyException NotWritablePropertyException(java.lang.Class&lt;?&gt;, java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.MutablePropertyValues org.springframework.beans.MutablePropertyValues addPropertyValues(java.util.Map&lt;?,?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanUtils void copyProperties(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.PropertyAccessor NESTED_PROPERTY_SEPARATOR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanUtils java.lang.reflect.Method resolveSignature(java.lang.String, java.lang.Class&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanWrapperImpl BeanWrapperImpl(java.lang.Object, java.lang.String, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanUtils java.lang.reflect.Method findMethodWithMinimalParameters(java.lang.reflect.Method[], java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanWrapperImpl java.beans.PropertyDescriptor[] getPropertyDescriptors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.MutablePropertyValues org.springframework.beans.MutablePropertyValues addPropertyValues(org.springframework.beans.PropertyValues)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.TypeMismatchException TypeMismatchException(java.beans.PropertyChangeEvent, java.lang.Class&lt;?&gt;, java.lang.Throwable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanUtils T instantiate(java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanWrapperImpl java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.MethodInvocationException MethodInvocationException(java.beans.PropertyChangeEvent, java.lang.Throwable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanWrapperImpl java.lang.Object getPropertyValue(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.AbstractPropertyAccessor void setPropertyValue(java.lang.String, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.beans.BeanUtils java.beans.PropertyDescriptor findPropertyForMethod(java.lang.reflect.Method) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.PropertyValues org.springframework.beans.PropertyValues changesSince(org.springframework.beans.PropertyValues)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.beans.DirectFieldAccessor void setPropertyValue(java.lang.String, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.beans.BeanWrapperImpl org.springframework.beans.BeanWrapperImpl getBeanWrapperForPropertyPath(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.AbstractPropertyAccessor void setPropertyValues(org.springframework.beans.PropertyValues, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.MutablePropertyValues org.springframework.beans.PropertyValue getPropertyValue(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.beans.PropertyAccessorFactory org.springframework.beans.BeanWrapper forBeanPropertyAccess(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.NotWritablePropertyException NotWritablePropertyException(java.lang.Class&lt;?&gt;, java.lang.String, java.lang.String, java.lang.Throwable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.PropertyBatchUpdateException void printStackTrace(java.io.PrintWriter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanWrapperImpl void setWrappedInstance(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.ExtendedBeanInfoFactory java.beans.BeanInfo getBeanInfo(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.NotReadablePropertyException NotReadablePropertyException(java.lang.Class&lt;?&gt;, java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanWrapper java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.beans.MethodInvocationException ERROR_CODE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.PropertyAccessorUtils java.lang.String getPropertyName(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanWrapper java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.beans.NotReadablePropertyException NotReadablePropertyException(java.lang.Class&lt;?&gt;, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.PropertyAccessor void setPropertyValues(org.springframework.beans.PropertyValues) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.springframework.beans.PropertyAccessorUtils int getLastNestedPropertySeparatorIndex(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.BeanWrapperImpl void setWrappedInstance(java.lang.Object, java.lang.String, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.ConversionNotSupportedException ConversionNotSupportedException(java.beans.PropertyChangeEvent, java.lang.Class&lt;?&gt;, java.lang.Throwable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.NullValueInNestedPathException NullValueInNestedPathException(java.lang.Class&lt;?&gt;, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.springframework.beans.PropertyValue org.springframework.beans.PropertyValue getOriginalPropertyValue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
